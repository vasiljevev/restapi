# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.end_devices_inner_measure_points_inner import EndDevicesInnerMeasurePointsInner
from openapi_server.models.geometry import Geometry
from openapi_server import util


class EndDevicesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_type: str=None, end_device_id: str=None, name: str=None, organization_id: str=None, device_type: str=None, serial_number: str=None, is_amr: str=None, is_commercial: str=None, device_status: str=None, belonging_type: str=None, usage_point_id: str=None, substation_code_tm: str=None, bay_code_tm: str=None, line_code_tm: str=None, tower_code_tm: str=None, device_location: str=None, geometry: Geometry=None, measure_points: List[EndDevicesInnerMeasurePointsInner]=None):
        """EndDevicesInner - a model defined in OpenAPI

        :param action_type: The action_type of this EndDevicesInner.
        :param end_device_id: The end_device_id of this EndDevicesInner.
        :param name: The name of this EndDevicesInner.
        :param organization_id: The organization_id of this EndDevicesInner.
        :param device_type: The device_type of this EndDevicesInner.
        :param serial_number: The serial_number of this EndDevicesInner.
        :param is_amr: The is_amr of this EndDevicesInner.
        :param is_commercial: The is_commercial of this EndDevicesInner.
        :param device_status: The device_status of this EndDevicesInner.
        :param belonging_type: The belonging_type of this EndDevicesInner.
        :param usage_point_id: The usage_point_id of this EndDevicesInner.
        :param substation_code_tm: The substation_code_tm of this EndDevicesInner.
        :param bay_code_tm: The bay_code_tm of this EndDevicesInner.
        :param line_code_tm: The line_code_tm of this EndDevicesInner.
        :param tower_code_tm: The tower_code_tm of this EndDevicesInner.
        :param device_location: The device_location of this EndDevicesInner.
        :param geometry: The geometry of this EndDevicesInner.
        :param measure_points: The measure_points of this EndDevicesInner.
        """
        self.openapi_types = {
            'action_type': str,
            'end_device_id': str,
            'name': str,
            'organization_id': str,
            'device_type': str,
            'serial_number': str,
            'is_amr': str,
            'is_commercial': str,
            'device_status': str,
            'belonging_type': str,
            'usage_point_id': str,
            'substation_code_tm': str,
            'bay_code_tm': str,
            'line_code_tm': str,
            'tower_code_tm': str,
            'device_location': str,
            'geometry': Geometry,
            'measure_points': List[EndDevicesInnerMeasurePointsInner]
        }

        self.attribute_map = {
            'action_type': 'ActionType',
            'end_device_id': 'EndDeviceId',
            'name': 'Name',
            'organization_id': 'OrganizationID',
            'device_type': 'DeviceType',
            'serial_number': 'SerialNumber',
            'is_amr': 'isAMR',
            'is_commercial': 'IsCommercial',
            'device_status': 'DeviceStatus',
            'belonging_type': 'BelongingType',
            'usage_point_id': 'UsagePointID',
            'substation_code_tm': 'SubstationCodeTM',
            'bay_code_tm': 'BayCodeTM',
            'line_code_tm': 'LineCodeTM',
            'tower_code_tm': 'TowerCodeTM',
            'device_location': 'DeviceLocation',
            'geometry': 'geometry',
            'measure_points': 'MeasurePoints'
        }

        self._action_type = action_type
        self._end_device_id = end_device_id
        self._name = name
        self._organization_id = organization_id
        self._device_type = device_type
        self._serial_number = serial_number
        self._is_amr = is_amr
        self._is_commercial = is_commercial
        self._device_status = device_status
        self._belonging_type = belonging_type
        self._usage_point_id = usage_point_id
        self._substation_code_tm = substation_code_tm
        self._bay_code_tm = bay_code_tm
        self._line_code_tm = line_code_tm
        self._tower_code_tm = tower_code_tm
        self._device_location = device_location
        self._geometry = geometry
        self._measure_points = measure_points

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndDevicesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndDevices_inner of this EndDevicesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_type(self):
        """Gets the action_type of this EndDevicesInner.


        :return: The action_type of this EndDevicesInner.
        :rtype: str
        """
        return self._action_type

    @action_type.setter
    def action_type(self, action_type):
        """Sets the action_type of this EndDevicesInner.


        :param action_type: The action_type of this EndDevicesInner.
        :type action_type: str
        """

        self._action_type = action_type

    @property
    def end_device_id(self):
        """Gets the end_device_id of this EndDevicesInner.


        :return: The end_device_id of this EndDevicesInner.
        :rtype: str
        """
        return self._end_device_id

    @end_device_id.setter
    def end_device_id(self, end_device_id):
        """Sets the end_device_id of this EndDevicesInner.


        :param end_device_id: The end_device_id of this EndDevicesInner.
        :type end_device_id: str
        """

        self._end_device_id = end_device_id

    @property
    def name(self):
        """Gets the name of this EndDevicesInner.


        :return: The name of this EndDevicesInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EndDevicesInner.


        :param name: The name of this EndDevicesInner.
        :type name: str
        """

        self._name = name

    @property
    def organization_id(self):
        """Gets the organization_id of this EndDevicesInner.


        :return: The organization_id of this EndDevicesInner.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this EndDevicesInner.


        :param organization_id: The organization_id of this EndDevicesInner.
        :type organization_id: str
        """

        self._organization_id = organization_id

    @property
    def device_type(self):
        """Gets the device_type of this EndDevicesInner.


        :return: The device_type of this EndDevicesInner.
        :rtype: str
        """
        return self._device_type

    @device_type.setter
    def device_type(self, device_type):
        """Sets the device_type of this EndDevicesInner.


        :param device_type: The device_type of this EndDevicesInner.
        :type device_type: str
        """

        self._device_type = device_type

    @property
    def serial_number(self):
        """Gets the serial_number of this EndDevicesInner.


        :return: The serial_number of this EndDevicesInner.
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this EndDevicesInner.


        :param serial_number: The serial_number of this EndDevicesInner.
        :type serial_number: str
        """

        self._serial_number = serial_number

    @property
    def is_amr(self):
        """Gets the is_amr of this EndDevicesInner.


        :return: The is_amr of this EndDevicesInner.
        :rtype: str
        """
        return self._is_amr

    @is_amr.setter
    def is_amr(self, is_amr):
        """Sets the is_amr of this EndDevicesInner.


        :param is_amr: The is_amr of this EndDevicesInner.
        :type is_amr: str
        """

        self._is_amr = is_amr

    @property
    def is_commercial(self):
        """Gets the is_commercial of this EndDevicesInner.


        :return: The is_commercial of this EndDevicesInner.
        :rtype: str
        """
        return self._is_commercial

    @is_commercial.setter
    def is_commercial(self, is_commercial):
        """Sets the is_commercial of this EndDevicesInner.


        :param is_commercial: The is_commercial of this EndDevicesInner.
        :type is_commercial: str
        """

        self._is_commercial = is_commercial

    @property
    def device_status(self):
        """Gets the device_status of this EndDevicesInner.


        :return: The device_status of this EndDevicesInner.
        :rtype: str
        """
        return self._device_status

    @device_status.setter
    def device_status(self, device_status):
        """Sets the device_status of this EndDevicesInner.


        :param device_status: The device_status of this EndDevicesInner.
        :type device_status: str
        """

        self._device_status = device_status

    @property
    def belonging_type(self):
        """Gets the belonging_type of this EndDevicesInner.


        :return: The belonging_type of this EndDevicesInner.
        :rtype: str
        """
        return self._belonging_type

    @belonging_type.setter
    def belonging_type(self, belonging_type):
        """Sets the belonging_type of this EndDevicesInner.


        :param belonging_type: The belonging_type of this EndDevicesInner.
        :type belonging_type: str
        """

        self._belonging_type = belonging_type

    @property
    def usage_point_id(self):
        """Gets the usage_point_id of this EndDevicesInner.


        :return: The usage_point_id of this EndDevicesInner.
        :rtype: str
        """
        return self._usage_point_id

    @usage_point_id.setter
    def usage_point_id(self, usage_point_id):
        """Sets the usage_point_id of this EndDevicesInner.


        :param usage_point_id: The usage_point_id of this EndDevicesInner.
        :type usage_point_id: str
        """

        self._usage_point_id = usage_point_id

    @property
    def substation_code_tm(self):
        """Gets the substation_code_tm of this EndDevicesInner.


        :return: The substation_code_tm of this EndDevicesInner.
        :rtype: str
        """
        return self._substation_code_tm

    @substation_code_tm.setter
    def substation_code_tm(self, substation_code_tm):
        """Sets the substation_code_tm of this EndDevicesInner.


        :param substation_code_tm: The substation_code_tm of this EndDevicesInner.
        :type substation_code_tm: str
        """

        self._substation_code_tm = substation_code_tm

    @property
    def bay_code_tm(self):
        """Gets the bay_code_tm of this EndDevicesInner.


        :return: The bay_code_tm of this EndDevicesInner.
        :rtype: str
        """
        return self._bay_code_tm

    @bay_code_tm.setter
    def bay_code_tm(self, bay_code_tm):
        """Sets the bay_code_tm of this EndDevicesInner.


        :param bay_code_tm: The bay_code_tm of this EndDevicesInner.
        :type bay_code_tm: str
        """

        self._bay_code_tm = bay_code_tm

    @property
    def line_code_tm(self):
        """Gets the line_code_tm of this EndDevicesInner.


        :return: The line_code_tm of this EndDevicesInner.
        :rtype: str
        """
        return self._line_code_tm

    @line_code_tm.setter
    def line_code_tm(self, line_code_tm):
        """Sets the line_code_tm of this EndDevicesInner.


        :param line_code_tm: The line_code_tm of this EndDevicesInner.
        :type line_code_tm: str
        """

        self._line_code_tm = line_code_tm

    @property
    def tower_code_tm(self):
        """Gets the tower_code_tm of this EndDevicesInner.


        :return: The tower_code_tm of this EndDevicesInner.
        :rtype: str
        """
        return self._tower_code_tm

    @tower_code_tm.setter
    def tower_code_tm(self, tower_code_tm):
        """Sets the tower_code_tm of this EndDevicesInner.


        :param tower_code_tm: The tower_code_tm of this EndDevicesInner.
        :type tower_code_tm: str
        """

        self._tower_code_tm = tower_code_tm

    @property
    def device_location(self):
        """Gets the device_location of this EndDevicesInner.


        :return: The device_location of this EndDevicesInner.
        :rtype: str
        """
        return self._device_location

    @device_location.setter
    def device_location(self, device_location):
        """Sets the device_location of this EndDevicesInner.


        :param device_location: The device_location of this EndDevicesInner.
        :type device_location: str
        """

        self._device_location = device_location

    @property
    def geometry(self):
        """Gets the geometry of this EndDevicesInner.


        :return: The geometry of this EndDevicesInner.
        :rtype: Geometry
        """
        return self._geometry

    @geometry.setter
    def geometry(self, geometry):
        """Sets the geometry of this EndDevicesInner.


        :param geometry: The geometry of this EndDevicesInner.
        :type geometry: Geometry
        """

        self._geometry = geometry

    @property
    def measure_points(self):
        """Gets the measure_points of this EndDevicesInner.


        :return: The measure_points of this EndDevicesInner.
        :rtype: List[EndDevicesInnerMeasurePointsInner]
        """
        return self._measure_points

    @measure_points.setter
    def measure_points(self, measure_points):
        """Sets the measure_points of this EndDevicesInner.


        :param measure_points: The measure_points of this EndDevicesInner.
        :type measure_points: List[EndDevicesInnerMeasurePointsInner]
        """

        self._measure_points = measure_points
