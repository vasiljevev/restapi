# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceLocationAddress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: str=None, region: str=None, district: str=None, city: str=None, street: str=None, house: str=None):
        """ServiceLocationAddress - a model defined in OpenAPI

        :param address: The address of this ServiceLocationAddress.
        :param region: The region of this ServiceLocationAddress.
        :param district: The district of this ServiceLocationAddress.
        :param city: The city of this ServiceLocationAddress.
        :param street: The street of this ServiceLocationAddress.
        :param house: The house of this ServiceLocationAddress.
        """
        self.openapi_types = {
            'address': str,
            'region': str,
            'district': str,
            'city': str,
            'street': str,
            'house': str
        }

        self.attribute_map = {
            'address': 'Address',
            'region': 'Region',
            'district': 'District',
            'city': 'City',
            'street': 'Street',
            'house': 'House'
        }

        self._address = address
        self._region = region
        self._district = district
        self._city = city
        self._street = street
        self._house = house

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceLocationAddress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceLocation_Address of this ServiceLocationAddress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this ServiceLocationAddress.

        Полный адрес (до дома)

        :return: The address of this ServiceLocationAddress.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this ServiceLocationAddress.

        Полный адрес (до дома)

        :param address: The address of this ServiceLocationAddress.
        :type address: str
        """

        self._address = address

    @property
    def region(self):
        """Gets the region of this ServiceLocationAddress.

        Регион

        :return: The region of this ServiceLocationAddress.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this ServiceLocationAddress.

        Регион

        :param region: The region of this ServiceLocationAddress.
        :type region: str
        """

        self._region = region

    @property
    def district(self):
        """Gets the district of this ServiceLocationAddress.

        Район

        :return: The district of this ServiceLocationAddress.
        :rtype: str
        """
        return self._district

    @district.setter
    def district(self, district):
        """Sets the district of this ServiceLocationAddress.

        Район

        :param district: The district of this ServiceLocationAddress.
        :type district: str
        """

        self._district = district

    @property
    def city(self):
        """Gets the city of this ServiceLocationAddress.

        Город

        :return: The city of this ServiceLocationAddress.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this ServiceLocationAddress.

        Город

        :param city: The city of this ServiceLocationAddress.
        :type city: str
        """

        self._city = city

    @property
    def street(self):
        """Gets the street of this ServiceLocationAddress.

        Улица

        :return: The street of this ServiceLocationAddress.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this ServiceLocationAddress.

        Улица

        :param street: The street of this ServiceLocationAddress.
        :type street: str
        """

        self._street = street

    @property
    def house(self):
        """Gets the house of this ServiceLocationAddress.

        Дом

        :return: The house of this ServiceLocationAddress.
        :rtype: str
        """
        return self._house

    @house.setter
    def house(self, house):
        """Sets the house of this ServiceLocationAddress.

        Дом

        :param house: The house of this ServiceLocationAddress.
        :type house: str
        """

        self._house = house
