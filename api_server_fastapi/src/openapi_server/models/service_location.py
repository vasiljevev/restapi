# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401
from openapi_server.models.geometry import Geometry
from openapi_server.models.service import Service
from openapi_server.models.service_location_address import ServiceLocationAddress
from openapi_server.models.service_location_cadatster import ServiceLocationCadatster


class ServiceLocation(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    ServiceLocation - a model defined in OpenAPI

        service: The service of this ServiceLocation.
        consumer_id: The consumer_id of this ServiceLocation.
        service_location_id: The service_location_id of this ServiceLocation.
        address: The address of this ServiceLocation [Optional].
        cadatster: The cadatster of this ServiceLocation [Optional].
        geometry: The geometry of this ServiceLocation.
    """

    service: Service = Field(alias="Service")
    consumer_id: str = Field(alias="ConsumerId")
    service_location_id: str = Field(alias="ServiceLocationId")
    address: Optional[ServiceLocationAddress] = Field(alias="Address", default=None)
    cadatster: Optional[ServiceLocationCadatster] = Field(alias="Cadatster", default=None)
    geometry: Geometry = Field(alias="Geometry")

ServiceLocation.update_forward_refs()
