# coding: utf-8

"""
    Omnuis-API astu specificatioin

    Интеграционный сервис АИС КИС Баланс

    The version of the OpenAPI document: 2.0
    Contact: e-vasilyev@it-serv.ru
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date

from pydantic import BaseModel, Field

class DisconnectionReconnectionRequestBodyParams(BaseModel):
    """
    DisconnectionReconnectionRequestBodyParams
    """
    date_begin: date = Field(..., alias="Date_begin", description="Начальная дата анализа данных по потребителям")
    date_end: date = Field(..., alias="Date_end", description="Начальная дата анализа данных по потребителям")
    __properties = ["Date_begin", "Date_end"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> DisconnectionReconnectionRequestBodyParams:
        """Create an instance of DisconnectionReconnectionRequestBodyParams from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> DisconnectionReconnectionRequestBodyParams:
        """Create an instance of DisconnectionReconnectionRequestBodyParams from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return DisconnectionReconnectionRequestBodyParams.parse_obj(obj)

        _obj = DisconnectionReconnectionRequestBodyParams.parse_obj({
            "date_begin": obj.get("Date_begin"),
            "date_end": obj.get("Date_end")
        })
        return _obj


